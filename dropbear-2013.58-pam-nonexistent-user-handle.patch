diff -Naur dropbear-2013.58/auth.h dropbear-2013.58-pam/auth.h
--- dropbear-2013.58/auth.h	2013-05-02 11:39:33.011684193 +0800
+++ dropbear-2013.58-pam/auth.h	2013-05-03 12:09:41.642751524 +0800
@@ -40,6 +40,10 @@
 void svr_auth_pubkey();
 void svr_auth_pam();
 
+#ifdef ENABLE_SVR_PAM_AUTH
+extern char *clone_for_nonexistent_user;
+#endif
+
 #ifdef ENABLE_SVR_PUBKEY_OPTIONS
 int svr_pubkey_allows_agentfwd();
 int svr_pubkey_allows_tcpfwd();
diff -Naur dropbear-2013.58/cli-runopts.c dropbear-2013.58-pam/cli-runopts.c
--- dropbear-2013.58/cli-runopts.c	2013-05-02 11:39:33.011684193 +0800
+++ dropbear-2013.58-pam/cli-runopts.c	2013-05-03 14:02:02.926002082 +0800
@@ -32,6 +32,9 @@
 #include "list.h"
 
 cli_runopts cli_opts; /* GLOBAL */
+#ifdef ENABLE_SVR_PAM_AUTH
+char *clone_for_nonexistent_user;
+#endif
 
 static void printhelp();
 static void parse_hostname(const char* orighostarg);
@@ -159,6 +162,9 @@
 	opts.cipher_list = NULL;
 	opts.mac_list = NULL;
 #endif
+#ifdef ENABLE_SVR_PAM_AUTH
+	clone_for_nonexistent_user = NULL;
+#endif
 	/* not yet
 	opts.ipv4 = 1;
 	opts.ipv6 = 1;
diff -Naur dropbear-2013.58/common-session.c dropbear-2013.58-pam/common-session.c
--- dropbear-2013.58/common-session.c	2013-05-02 11:39:33.011684193 +0800
+++ dropbear-2013.58-pam/common-session.c	2013-05-03 12:19:49.923104402 +0800
@@ -455,11 +455,22 @@
 
 	pw = getpwnam(username);
 	if (!pw) {
+#ifndef ENABLE_SVR_PAM_AUTH
 		return;
+#else
+		if(clone_for_nonexistent_user)
+			pw = getpwnam(clone_for_nonexistent_user);
+		if (!pw)
+			return;
+#endif
 	}
 	ses.authstate.pw_uid = pw->pw_uid;
 	ses.authstate.pw_gid = pw->pw_gid;
+#ifndef ENABLE_SVR_PAM_AUTH
 	ses.authstate.pw_name = m_strdup(pw->pw_name);
+#else
+	ses.authstate.pw_name = m_strdup(username);
+#endif
 	ses.authstate.pw_dir = m_strdup(pw->pw_dir);
 	ses.authstate.pw_shell = m_strdup(pw->pw_shell);
 	{
diff -Naur dropbear-2013.58/loginrec.c dropbear-2013.58-pam/loginrec.c
--- dropbear-2013.58/loginrec.c	2013-05-02 11:39:33.047683740 +0800
+++ dropbear-2013.58-pam/loginrec.c	2013-05-03 14:11:51.466603157 +0800
@@ -157,6 +157,8 @@
 #include "loginrec.h"
 #include "dbutil.h"
 #include "atomicio.h"
+#include "options.h"
+#include "auth.h"
 
 /**
  ** prototypes for helper functions in this file
@@ -276,6 +278,10 @@
 	if (username) {
 		strlcpy(li->username, username, sizeof(li->username));
 		pw = getpwnam(li->username);
+#ifdef ENABLE_SVR_PAM_AUTH
+		if (pw == NULL && clone_for_nonexistent_user)
+			pw = getpwnam(clone_for_nonexistent_user);
+#endif
 		if (pw == NULL)
 			dropbear_exit("login_init_entry: Cannot find user \"%s\"",
 					li->username);
diff -Naur dropbear-2013.58/svr-chansession.c dropbear-2013.58-pam/svr-chansession.c
--- dropbear-2013.58/svr-chansession.c	2013-05-02 11:39:33.051683690 +0800
+++ dropbear-2013.58-pam/svr-chansession.c	2013-05-03 12:09:54.846585527 +0800
@@ -570,6 +570,10 @@
 	}
 
 	pw = getpwnam(ses.authstate.pw_name);
+#ifdef ENABLE_SVR_PAM_AUTH
+	if(!pw)
+		pw = getpwnam(clone_for_nonexistent_user);
+#endif
 	if (!pw)
 		dropbear_exit("getpwnam failed after succeeding previously");
 	pty_setowner(pw, chansess->tty);
diff -Naur dropbear-2013.58/svr-runopts.c dropbear-2013.58-pam/svr-runopts.c
--- dropbear-2013.58/svr-runopts.c	2013-05-02 11:39:33.051683690 +0800
+++ dropbear-2013.58-pam/svr-runopts.c	2013-05-03 14:16:10.343348628 +0800
@@ -30,6 +30,9 @@
 #include "algo.h"
 
 svr_runopts svr_opts; /* GLOBAL */
+#ifdef ENABLE_SVR_PAM_AUTH
+char *clone_for_nonexistent_user;
+#endif
 
 static void printhelp(const char * progname);
 static void addportandaddress(char* spec);
@@ -58,6 +61,9 @@
 #ifdef DO_MOTD
 					"-m		Don't display the motd on login\n"
 #endif
+#ifdef ENABLE_SVR_PAM_AUTH
+					"-c username	choose a system account for nonexistent user at PAM mode\n"
+#endif
 					"-w		Disallow root logins\n"
 #if defined(ENABLE_SVR_PASSWORD_AUTH) || defined(ENABLE_SVR_PAM_AUTH)
 					"-s		Disable password logins\n"
@@ -147,6 +153,9 @@
 	opts.listen_fwd_all = 0;
 #endif
 
+#ifdef ENABLE_SVR_PAM_AUTH
+	clone_for_nonexistent_user = NULL;
+#endif
 	for (i = 1; i < (unsigned int)argc; i++) {
 		if (nextisport) {
 			addportandaddress(argv[i]);
@@ -216,6 +225,11 @@
 					svr_opts.domotd = 0;
 					break;
 #endif
+#ifdef ENABLE_SVR_PAM_AUTH
+				case 'c':
+					next = &clone_for_nonexistent_user;
+					break;
+#endif
 				case 'w':
 					svr_opts.norootlogin = 1;
 					break;
